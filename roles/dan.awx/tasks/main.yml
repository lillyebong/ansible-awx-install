## roles/ansible-role-awx/tasks/main.yml
# vim:ft=yaml.ansible:
---
- name: Include OS-specific variables.
  include_vars: '{{ item }}'
  with_first_found:
    - "{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml"
    - "{{ ansible_distribution }}.yml"
    - "{{ ansible_os_family }}.yml"
    - "default.yml"

- name: Include encrypted vars.
  include_vars: passwords.yml
  ignore_errors: yes

- name: Install AWX dependencies.
  package:
    name: '{{ awx_package_dependencies }}'
    state: present

- name: Pip install docker_compose
  pip:
    name: docker_compose
    state: present
    executable: pip3

- name: Pip install docker
  pip:
    name: docker
    state: present
    executable: pip3

- name: Ensure docker is started
  service:
    name: docker
    state: started
    enabled: yes

# disable selinux or fix to make it work

- name: Clone AWX into configured directory.
  git:
    repo: "{{ awx_repo }}"
    dest: "{{ awx_repo_dir }}"
    version: "{{ awx_version }}"
    update: "{{ awx_keep_updated }}"
    force: true
    accept_hostkey: true


- name: Clone AWX logo into configured directory.
  git:
    repo: "{{ awx_repo_logo }}"
    dest: "{{ awx_repo_dir }}"
    update: "{{ awx_keep_updated }}"
    force: true
    accept_hostkey: true

- name: Modify installation inventory.
  template:
    src: inventory.j2
    dest: "{{ awx_repo_dir }}/installer/inventory"

- name: Run the AWX installation playbook.
  command: "ansible-playbook -i inventory install.yml"
  args:
    chdir: "{{ awx_repo_dir }}/installer"
    creates: /etc/awx_playbook_complete

- name: Create a file to mark whether this playbook has completed.
  file:
    path: /etc/awx_playbook_complete
    state: touch
  changed_when: false

- name: Open port in firewall (Firewalld)
  firewalld:
    service: '{{ item }}'
    permanent: yes
    state: enabled
    immediate: yes
    zone: public
  when: "'RedHat' in ansible_os_family"
  with_items:
    - "http"
    - "https"
  notify: restart firewall

- name: Open port in firewall (Firewalld)
  firewalld:
    port: '{{ item }}'
    permanent: yes
    state: enabled
    zone: public
    immediate: yes
  when: "'RedHat' in ansible_os_family"
  with_items:
    - "6379/tcp"
    - "5432/tcp"
    - "8052/tcp"
  notify: restart firewall
...
